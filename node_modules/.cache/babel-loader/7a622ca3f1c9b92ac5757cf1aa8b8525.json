{"ast":null,"code":"import _classCallCheck from \"/home/tony/work/UserManagement/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tony/work/UserManagement/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tony/work/UserManagement/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tony/work/UserManagement/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tony/work/UserManagement/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tony/work/UserManagement/src/components/content/content.jsx\";\nimport React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport routes from './../../config/page-route.jsx';\nimport { PageSettings } from './../../config/page-settings.js';\n\nfunction setTitle(path, routeArray) {\n  var pageTitle;\n\n  for (var i = 0; i < routeArray.length; i++) {\n    if (routeArray[i].path === path) {\n      pageTitle = 'Color Admin | ' + routeArray[i].title;\n    }\n  }\n\n  document.title = pageTitle ? pageTitle : 'Color Admin | React App';\n}\n\nvar Content =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Content, _React$Component);\n\n  function Content() {\n    _classCallCheck(this, Content);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Content).apply(this, arguments));\n  }\n\n  _createClass(Content, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setTitle(this.props.history.location.pathname, routes);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this = this;\n\n      this.props.history.listen(function () {\n        setTitle(_this.props.history.location.pathname, routes);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PageSettings.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, function (_ref) {\n        var pageContentFullWidth = _ref.pageContentFullWidth,\n            pageContentClass = _ref.pageContentClass,\n            pageContentInverseMode = _ref.pageContentInverseMode;\n        return React.createElement(\"div\", {\n          className: 'content ' + (pageContentFullWidth ? 'content-full-width ' : '') + (pageContentInverseMode ? 'content-inverse-mode ' : '') + pageContentClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, routes.map(function (route, index) {\n          return React.createElement(Route, {\n            key: index,\n            path: route.path,\n            exact: route.exact,\n            component: route.component,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          });\n        }));\n      });\n    }\n  }]);\n\n  return Content;\n}(React.Component);\n\nexport default withRouter(Content);","map":{"version":3,"sources":["/home/tony/work/UserManagement/src/components/content/content.jsx"],"names":["React","Route","withRouter","routes","PageSettings","setTitle","path","routeArray","pageTitle","i","length","title","document","Content","props","history","location","pathname","listen","pageContentFullWidth","pageContentClass","pageContentInverseMode","map","route","index","exact","component","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,YAAT,QAA6B,iCAA7B;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,UAAxB,EAAoC;AACnC,MAAIC,SAAJ;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGF,UAAU,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACzC,QAAIF,UAAU,CAACE,CAAD,CAAV,CAAcH,IAAd,KAAuBA,IAA3B,EAAiC;AAChCE,MAAAA,SAAS,GAAG,mBAAmBD,UAAU,CAACE,CAAD,CAAV,CAAcE,KAA7C;AACA;AACD;;AACDC,EAAAA,QAAQ,CAACD,KAAT,GAAkBH,SAAD,GAAcA,SAAd,GAA0B,yBAA3C;AACA;;IAEKK,O;;;;;;;;;;;;;wCACe;AACnBR,MAAAA,QAAQ,CAAC,KAAKS,KAAL,CAAWC,OAAX,CAAmBC,QAAnB,CAA4BC,QAA7B,EAAuCd,MAAvC,CAAR;AACA;;;yCACoB;AAAA;;AAClB,WAAKW,KAAL,CAAWC,OAAX,CAAmBG,MAAnB,CAA0B,YAAM;AACjCb,QAAAA,QAAQ,CAAC,KAAI,CAACS,KAAL,CAAWC,OAAX,CAAmBC,QAAnB,CAA4BC,QAA7B,EAAuCd,MAAvC,CAAR;AACE,OAFD;AAGD;;;6BAEO;AACR,aACC,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA,YAAEgB,oBAAF,QAAEA,oBAAF;AAAA,YAAwBC,gBAAxB,QAAwBA,gBAAxB;AAAA,YAA0CC,sBAA1C,QAA0CA,sBAA1C;AAAA,eACA;AAAK,UAAA,SAAS,EAAE,cAAcF,oBAAoB,GAAG,qBAAH,GAA2B,EAA7D,KAAoEE,sBAAsB,GAAG,uBAAH,GAA6B,EAAvH,IAA6HD,gBAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEjB,MAAM,CAACmB,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR;AAAA,iBACX,oBAAC,KAAD;AACC,YAAA,GAAG,EAAEA,KADN;AAEC,YAAA,IAAI,EAAED,KAAK,CAACjB,IAFb;AAGC,YAAA,KAAK,EAAEiB,KAAK,CAACE,KAHd;AAIC,YAAA,SAAS,EAAEF,KAAK,CAACG,SAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW;AAAA,SAAX,CADF,CADA;AAAA,OADF,CADD;AAiBA;;;;EA5BoB1B,KAAK,CAAC2B,S;;AA+B5B,eAAezB,UAAU,CAACW,OAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport routes from './../../config/page-route.jsx';\nimport { PageSettings } from './../../config/page-settings.js';\n\nfunction setTitle(path, routeArray) {\n\tvar pageTitle;\n\tfor (var i=0; i < routeArray.length; i++) {\n\t\tif (routeArray[i].path === path) {\n\t\t\tpageTitle = 'Color Admin | ' + routeArray[i].title;\n\t\t}\n\t}\n\tdocument.title = (pageTitle) ? pageTitle : 'Color Admin | React App';\n}\n\nclass Content extends React.Component {\n\tcomponentDidMount() {\n\t\tsetTitle(this.props.history.location.pathname, routes);\n\t}\n\tcomponentWillMount() {\n    this.props.history.listen(() => {\n\t\t\tsetTitle(this.props.history.location.pathname, routes);\n    });\n  }\n  \n\trender() {\n\t\treturn (\n\t\t\t<PageSettings.Consumer>\n\t\t\t\t{({pageContentFullWidth, pageContentClass, pageContentInverseMode}) => (\n\t\t\t\t\t<div className={'content ' + (pageContentFullWidth ? 'content-full-width ' : '') + (pageContentInverseMode ? 'content-inverse-mode ' : '') + pageContentClass}>\n\t\t\t\t\t\t{routes.map((route, index) => (\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\t</PageSettings.Consumer>\n\t\t)\n\t}\n}\n\nexport default withRouter(Content);\n"]},"metadata":{},"sourceType":"module"}